<?xml version="1.0" encoding="ISO-8859-1"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mathfp="http://eric.brechemier.name/2004/Onno.Hommes/MathFP/" xmlns:config="http://eric.brechemier.name/2004/generation/encoder-decoder/config" xmlns:a4j="http://eric.brechemier.name/2004/generation/encoder-decoder/semanticActionsForJava" xmlns:ExpWay="http://eric.brechemier.name/2004/NanoXForms/extension/expWay" targetNamespace="http://eric.brechemier.name/2004/NanoXForms/extension/expWay" elementFormDefault="qualified">
  <xsd:import namespace="http://eric.brechemier.name/2004/Onno.Hommes/MathFP/" schemaLocation="mathFP.xsd"/>
  <!--
  *** Credits ***
  Schema: Your Name, Month 2004
  
  Tools & Concept: Eric Bréchemier
  MathFP: developed by Onno Hommes, see http://home.rochester.rr.com/ohommes/MathFP/
  -->
  <!--
  elements: User Vocabulary
  -->
  <!--
  Using ant addSchemaTypes, missing complexTypes will be created for all elements:
  - a simple type when type="st"
  e.g. <xsd:element name="USERelement" type="st" />
  - a complex type when type attribute is missing
  e.g. <xsd:element name="USERelement" />
  - a complex type with name after ':' when a qualified name is provided
  e.g. <xsd:element name="USERelement" type="USERPrefix:TypeName" />
  -->
  <xsd:element name="mapping" type="ExpWay:Mapping"/>
  <xsd:element name="column" type="ExpWay:Column"/>
  <xsd:element name="path" type="ExpWay:Path"/>
  <!--
  complexTypes defining tree structure: User Grammar
  NOTA there are no simpleTypes defs for now, but they may be used for custom codec in future versions.
  -->
  <!--
  Using ant addSchemaAnnotations, missing annotations are added to schema & complex types
  -->
  <xsd:complexType name="Mapping">
    <xsd:sequence/>
    <!--<xsd:attribute name="id" type="xsd:byte" />-->
  </xsd:complexType>
  <xsd:complexType name="Column">
    <xsd:sequence/>
    <!--<xsd:attribute name="id" type="xsd:byte" />-->
  </xsd:complexType>
  <xsd:complexType name="Path">
    <xsd:sequence/>
    <!--<xsd:attribute name="id" type="xsd:byte" />-->
  </xsd:complexType>
</xsd:schema>